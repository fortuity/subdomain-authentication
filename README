Subdomain-Authentication

This is a Ruby on Rails web application that uses subdomains and provides user management and authentication. 

Tutorial (Walkthrough)

Each step that you must follow to create this application is documented here.

Assumptions

This tutorial is based on Rails 2.3. Some of the code shown here will not work in older versions of Rails. 

This was written before the release of Rails 3.0. Things will change significantly in Rails 3.0 so this tutorial will be outdated when Rails 3.0 is released.

Before beginning this tutorial, you need to install 

* The Ruby language ruby (version 1.8.7 or newer)
* The RubyGems packaging system (version 1.3.5 or newer)
* A working installation of SQLite (preferred), MySQL, or PostgreSQL
* Rails (version 2.3 or newer)

Check that current versions are installed on your computer:

ruby -v
gem -v
rails -v

You should have experience building a simple Rails application. Refer to http://guides.rubyonrails.org/ (Rails Guides) for help if you are a beginner.

Create the Rails Application

Open a terminal, navigate to a folder where you have rights to create files, and type:

$ rails subdomain-authentication

You may give the app a different name if you are building it for your own use. For this tutorial, we'll assume the name is "subdomain-authentication."

This will create a Rails application that uses a SQLite database for data storage. You may also use MySQL or PostgreSQL for data storage (refer to http://guides.rubyonrails.org/getting_started.html (Getting Started with Rails)).

After you create the application, switch to its folder to continue work directly in that application:

$ cd subdomain-authentication

Edit the README file to remove the standard Rails boilerplate. Add what you like (at least the name of the app).

Set Up Source Control (Git)

If you're creating an app for deployment into production, you'll want to set up a source control repository at this point. If you are building a throw-away app for your own education, you may skip this step.

Check that git is installed on your computer:

git version

Check that your GitHub account is set up properly:

ssh git@github.com

Create a top, project-level .gitignore file containing:

.DS_Store
log/*.log
tmp/**/*
config/database.yml
config/initializers/site_keys.rb
db/*.sqlite3

Initialize git and check in your first commit:

git init
git add .
git commit -m 'initial commit'
